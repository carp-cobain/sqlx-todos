{
  "openapi": "3.0.3",
  "info": {
    "title": "sqlx-todos",
    "description": "",
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "paths": {
    "/stories": {
      "get": {
        "tags": [
          "crate"
        ],
        "summary": "Get a page of stories",
        "operationId": "get_stories",
        "parameters": [
          {
            "name": "page_size",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "page_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a page of stories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stories"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "crate"
        ],
        "summary": "Create a new story",
        "operationId": "create_story",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoryBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Story created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Story"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/stories/{id}": {
      "get": {
        "tags": [
          "crate"
        ],
        "summary": "Get a story",
        "operationId": "get_story",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Story id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a story by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Story"
                }
              }
            }
          },
          "404": {
            "description": "Story not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "crate"
        ],
        "summary": "Delete a story",
        "operationId": "delete_story",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Story id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Story deleted"
          },
          "404": {
            "description": "Story not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "crate"
        ],
        "summary": "Update a story",
        "operationId": "update_story",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoryBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Story updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Story"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Story not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/stories/{id}/tasks": {
      "get": {
        "tags": [
          "crate"
        ],
        "summary": "Get all tasks for a story",
        "operationId": "get_tasks",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Story id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get tasks for a story",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "post": {
        "tags": [
          "crate"
        ],
        "summary": "Create a task",
        "operationId": "create_task",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Task created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Invalid requesst body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "crate"
        ],
        "summary": "Get a task",
        "operationId": "get_task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Task id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a task by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "crate"
        ],
        "summary": "Delete a task",
        "operationId": "delete_task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The task id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Task deleted"
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "crate"
        ],
        "summary": "Update a task",
        "operationId": "update_task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchTaskBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Task updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorDto": {
        "type": "object",
        "description": "The type sent as an error response to the client.",
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Status": {
        "type": "string",
        "enum": [
          "incomplete",
          "complete"
        ]
      },
      "Stories": {
        "type": "object",
        "description": "A page of stories",
        "required": [
          "stories"
        ],
        "properties": {
          "next_page": {
            "type": "string",
            "nullable": true
          },
          "stories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Story"
            }
          }
        }
      },
      "Story": {
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Task": {
        "type": "object",
        "required": [
          "id",
          "story_id",
          "name",
          "status",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "story_id": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}
